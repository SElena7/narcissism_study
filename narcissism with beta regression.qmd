---
title: "narcissism with beta regression"
author: "Elena Spirova"
format: html
editor: visual
---

Libraries used

```{r setup}
library(data.table)
library(brms)
library(ordbetareg)
library(bayesplot)
library(tidybayes)
library(bayestestR)
library(marginaleffects)
```

Data

```{r}
# read the data
getwd()
data <- fread("data.csv")

# filter for gender and age
d <- data[data$gender %in% c(1, 2) & data$age >= 18 & data$age <= 100, ]

# scoring
d$authority_score <- rowSums(d[, c("Q1", "Q5", "Q10", "Q11", "Q27", "Q32", "Q33", "Q34", "Q36", "Q40")], na.rm = TRUE)
d$exibitionism_score <- rowSums(d[, c("Q4", "Q7", "Q15", "Q19", "Q20", "Q26", "Q28", "Q30", "Q38", "Q39")], na.rm = TRUE)
d$entitlement_score <- rowSums(d[, c("Q3", "Q14", "Q17", "Q24")], na.rm = TRUE)

# Convert to factors
d$age.bin <- cut(d$age, breaks = 4, ordered_result = TRUE)
d$gender <- factor(d$gender, labels = c("M", "F"))

# Filter for beta regression valid range
d.beta <- d[d$authority_score > 0 & d$authority_score < 20, ]
d.beta$auth.beta <- d.beta$authority_score / 20

d.beta$age.bin

```

Inspect

```{r}
# Plot density
hist(d$authority_score / 20, breaks = 30, col = "lightblue", main = "Histogram of Authority Score", xlab = "Authority Score (scaled)")

# Smoothed histogram (density)
plot(density(d$authority_score / 20, na.rm = TRUE), main = "Density of Authority Score (scaled)", xlab = "Authority Score (scaled)")

```

Ordered Beta Regression

```{r}
# Fit the model
auth <- ordbetareg(auth.beta ~ gender + age.bin, 
                   data = d.beta, 
                   iter = 4000, 
                   warmup = 1000,
                   chains = 4, 
                   cores = 4,
                   seed = 142,
                   save_pars = save_pars(all = TRUE))

summary(auth)
pd(auth)
#pp_check_ordbeta(auth) this doesn't work
# Manual PPC via simulations
# Simulate posterior predictive values
yrep <- posterior_predict(auth)

# Compare with actual observed values
hist(apply(yrep, 2, mean), main = "Posterior Predictive Means", xlab = "Predicted Means")
abline(v = mean(auth$data$auth.beta), col = "red", lwd = 2)

auth.loo <- loo(auth)
auth.loo

```

```{r}
# Marginal effects
auth.comp <- avg_slopes(auth, type = "response")
auth.draws <- get_draws(auth.comp, shape = "long")

# Convert to data.frame and summarize
auth.draws_df <- as.data.frame(auth.draws)
out <- aggregate(draw ~ contrast, data = auth.draws_df, function(x) {
  est <- round(mean(x) * 10, 2)
  hdi_vals <- round(hdi(x) * 10, 2)
  pd_val <- p_direction(x)
  c(estimate = est, hdi.low = hdi_vals[1], hdi.high = hdi_vals[2], pd = pd_val)
})

# Clean up the output
out_df <- data.frame(
  contrast = out$contrast,
  estimate = sapply(out$draw, `[`, 1),
  hdi.low = sapply(out$draw, `[`, 2),
  hdi.high = sapply(out$draw, `[`, 3),
  p_direction = sapply(out$draw, `[`, 4)
)
out_df[order(-abs(out_df$estimate)), ]

```
